# Generated by Django 5.1.6 on 2025-05-07 02:50

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('communication', '0009_alter_applicationfailurereport_status'),
        ('plots_lots', '0008_croptype_lot_crop_name_alter_lot_crop_type'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RemoveField(
            model_name='flowactivationrequest',
            name='lot',
        ),
        migrations.RemoveField(
            model_name='flowactivationrequest',
            name='plot',
        ),
        migrations.RemoveField(
            model_name='flowactivationrequest',
            name='user',
        ),
        migrations.RemoveField(
            model_name='flowcancelrequest',
            name='lot',
        ),
        migrations.RemoveField(
            model_name='flowcancelrequest',
            name='plot',
        ),
        migrations.RemoveField(
            model_name='flowcancelrequest',
            name='user',
        ),
        migrations.RemoveField(
            model_name='flowchangerequest',
            name='lot',
        ),
        migrations.RemoveField(
            model_name='flowchangerequest',
            name='plot',
        ),
        migrations.RemoveField(
            model_name='flowchangerequest',
            name='user',
        ),
        migrations.RemoveField(
            model_name='watersupplyfailurereport',
            name='lot',
        ),
        migrations.RemoveField(
            model_name='watersupplyfailurereport',
            name='plot',
        ),
        migrations.RemoveField(
            model_name='watersupplyfailurereport',
            name='user',
        ),
        migrations.CreateModel(
            name='FailureReport',
            fields=[
                ('type', models.CharField(choices=[('Solicitud', 'Solicitud'), ('Reporte', 'Reporte')], help_text='Tipo de la petición (solicitud o reporte)', max_length=50, verbose_name='Tipo de la petición')),
                ('status', models.CharField(choices=[('Pendiente', 'Pendiente'), ('En proceso', 'En proceso'), ('A espera de aprobación', 'A espera de aprobación'), ('Finalizado', 'Finalizado')], default='Pendiente', help_text='Estado actual de la solicitud/reporte', max_length=50, verbose_name='Estado')),
                ('observations', models.CharField(blank=True, help_text='Motivo o detalles de la solicitud/reporte', max_length=300, null=True, verbose_name='Observaciones')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora en que se creó la solicitud/reporte', verbose_name='Fecha solicitud/reporte')),
                ('finalized_at', models.DateTimeField(blank=True, help_text='Fecha y hora en que la solicitud/reporte fue finalizado', null=True, verbose_name='Fecha finalizado')),
                ('id', models.IntegerField(help_text='Identificador único del reporte de fallo', primary_key=True, serialize=False, verbose_name='ID')),
                ('failure_type', models.CharField(choices=[('Reporte de Fallo en el Suministro del Agua', 'Reporte de Fallo en el Suministro del Agua'), ('Reporte de Fallo en el Aplicativo', 'Reporte de Fallo en el Aplicativo')], default='Reporte de Fallo en el Suministro del Agua', help_text='Tipo de reporte (suministro de agua o aplicativo)', max_length=50, verbose_name='Tipo de reporte')),
                ('created_by', models.ForeignKey(help_text='Usuario que realiza la solicitud/reporte', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
                ('lot', models.ForeignKey(blank=True, help_text='Lote al que se le realiza la solicitud/reporte', null=True, on_delete=django.db.models.deletion.CASCADE, to='plots_lots.lot', verbose_name='Lote')),
                ('plot', models.ForeignKey(blank=True, help_text='Predio al que se le realiza el reporte', null=True, on_delete=django.db.models.deletion.CASCADE, to='plots_lots.plot', verbose_name='Predio')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FlowRequest',
            fields=[
                ('type', models.CharField(choices=[('Solicitud', 'Solicitud'), ('Reporte', 'Reporte')], help_text='Tipo de la petición (solicitud o reporte)', max_length=50, verbose_name='Tipo de la petición')),
                ('status', models.CharField(choices=[('Pendiente', 'Pendiente'), ('En proceso', 'En proceso'), ('A espera de aprobación', 'A espera de aprobación'), ('Finalizado', 'Finalizado')], default='Pendiente', help_text='Estado actual de la solicitud/reporte', max_length=50, verbose_name='Estado')),
                ('observations', models.CharField(blank=True, help_text='Motivo o detalles de la solicitud/reporte', max_length=300, null=True, verbose_name='Observaciones')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora en que se creó la solicitud/reporte', verbose_name='Fecha solicitud/reporte')),
                ('finalized_at', models.DateTimeField(blank=True, help_text='Fecha y hora en que la solicitud/reporte fue finalizado', null=True, verbose_name='Fecha finalizado')),
                ('id', models.IntegerField(help_text='Identificador único de la solicitud/reporte', primary_key=True, serialize=False, verbose_name='ID')),
                ('flow_request_type', models.CharField(choices=[('Solicitud de Cambio de Caudal', 'Solicitud de Cambio de Caudal'), ('Solicitud de Cancelación Temporal de Caudal', 'Solicitud de Cancelación Temporal de Caudal'), ('Solicitud de Cancelación Definitiva de Caudal', 'Solicitud de Cancelación Definitiva de Caudal'), ('Solicitud de Activación de Caudal', 'Solicitud de Activación de Caudal')], help_text='Tipo de solicitud de caudal', max_length=80, verbose_name='Tipo de solicitud')),
                ('requested_flow', models.FloatField(blank=True, help_text='Valor del caudal solicitado en litros por segundo', null=True, verbose_name='Caudal solicitado (L/s)')),
                ('is_approved', models.BooleanField(default=False, help_text='Indica si la solicitud fue aprobada o no', verbose_name='Fue aprobada')),
                ('requires_delegation', models.BooleanField(default=False, help_text='Indica si la solicitud requiere delegación', verbose_name='Requiere delegación')),
                ('created_by', models.ForeignKey(help_text='Usuario que realiza la solicitud/reporte', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
                ('lot', models.ForeignKey(blank=True, help_text='Lote al que se le realiza la solicitud/reporte', null=True, on_delete=django.db.models.deletion.CASCADE, to='plots_lots.lot', verbose_name='Lote')),
            ],
            options={
                'verbose_name': 'Solicitud de caudal',
                'verbose_name_plural': 'Solicitudes de caudal',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.IntegerField(help_text='Identificador único de la asignación', primary_key=True, serialize=False, verbose_name='ID')),
                ('assignment_date', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora en que se realizó la asignación', verbose_name='Fecha de asignación')),
                ('reassigned', models.BooleanField(default=False, help_text='Indica si la solicitud/reporte ha sido reasignada', verbose_name='Fue reasignado')),
                ('assigned_by', models.ForeignKey(help_text='Usuario que realiza la asignación', on_delete=django.db.models.deletion.CASCADE, related_name='assignments_made', to=settings.AUTH_USER_MODEL, verbose_name='Usuario que asigna')),
                ('assigned_to', models.ForeignKey(help_text='Usuario al que se le asigna la solicitud/reporte', on_delete=django.db.models.deletion.CASCADE, related_name='assignments_received', to=settings.AUTH_USER_MODEL, verbose_name='Usuario a asignar')),
                ('failure_report', models.ForeignKey(blank=True, help_text='Reporte de fallo asociado a la asignación', null=True, on_delete=django.db.models.deletion.CASCADE, to='communication.failurereport', verbose_name='Reporte de fallo')),
                ('flow_request', models.ForeignKey(blank=True, help_text='Solicitud de caudal asociada a la asignación', null=True, on_delete=django.db.models.deletion.CASCADE, to='communication.flowrequest', verbose_name='Solicitud de caudal')),
            ],
            options={
                'verbose_name': 'Asignación de solicitud/reporte',
                'verbose_name_plural': 'Asignaciones de solicitudes/reportes',
            },
        ),
        migrations.CreateModel(
            name='MaintenanceReport',
            fields=[
                ('id', models.IntegerField(help_text='Identificador único del informe de mantenimiento', primary_key=True, serialize=False, verbose_name='ID')),
                ('intervention_date', models.DateTimeField(help_text='Fecha y hora en que se realizó la intervención', verbose_name='Fecha de intervención')),
                ('images', models.TextField(blank=True, help_text='Imágenes de la intervención realizada', null=True, verbose_name='Imágenes')),
                ('description', models.CharField(blank=True, help_text='Descripción de la intervención realizada', max_length=1000, null=True, verbose_name='Descripción')),
                ('status', models.CharField(choices=[('Finalizado', 'Finalizado'), ('Requiere nueva intervención', 'Requiere nueva intervención')], help_text='Estado final del informe de mantenimiento', max_length=50, verbose_name='Estado')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora en que se creó el informe de mantenimiento', verbose_name='Fecha de creación')),
                ('is_approved', models.BooleanField(default=False, help_text='Indica si el informe de mantenimiento fue aprobado o no', verbose_name='Fue aprobado')),
                ('assignment', models.ForeignKey(help_text='Asignación asociada al informe de mantenimiento', on_delete=django.db.models.deletion.CASCADE, to='communication.assignment', verbose_name='Asignación')),
            ],
            options={
                'verbose_name': 'Informe de mantenimiento',
                'verbose_name_plural': 'Informes de mantenimiento',
            },
        ),
        migrations.DeleteModel(
            name='ApplicationFailureReport',
        ),
        migrations.DeleteModel(
            name='FlowActivationRequest',
        ),
        migrations.DeleteModel(
            name='FlowCancelRequest',
        ),
        migrations.DeleteModel(
            name='FlowChangeRequest',
        ),
        migrations.DeleteModel(
            name='WaterSupplyFailureReport',
        ),
    ]
